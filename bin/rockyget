#!/bin/bash
# rockypkg
#
# Use this clone from the CentOS Git Service. You can use this to:
#   * To clone the latest of a major release for testing
#   * Download the sources easily
#   * Rebuild for your own use case
#   * Make changes and prepare to submit a patch

set -o errexit
set -o pipefail
#set -o nounset

CPATCH="0"
DEFAULT_VERSION="9"
DEFAULT_BRANCH="c${DEFAULT_VERSION}"
CFGLOC="$(dirname $0)"
ETCCFG="/etc/rockypkg"

[[ -d "${ETCCFG}" ]] && CFGLOC="${ETCCFG}" # Only set /etc/rockypkg as the base if it exists
RLCFG="${CFGLOC}/rlcfg.funcs"
LACFG="${CFGLOC}/rl.funcs"

# shellcheck source=/dev/null disable=SC2015
[[ -f "${RLCFG}" ]] && source "${RLCFG}" || { echo "Could not source ${RLCFG}"; exit 1; }
[[ -f "${LACFG}" ]] && source "${LACFG}" || { echo "Could not source ${LACFG}"; exit 1; }

OPTS=$(getopt -a -n rockyget -o n:b:c \
  -l name:,branch:,check -- "$@"
)

export __usage
__usage="
Usage: $0 [OPTIONS]

Options:
  -n, --name        # Name of the package
  -b, --branch      # Branch to pull for
  -c, --check       # Checks for Rocky Linux patch to pull down and use.
                    # This will fail if a patch repo already exists locally.
"

function usage() {
  echo "$__usage"
}

eval set -- "$OPTS"
while :; do
  case "$1" in
    -n | --name)        NAME="$2"     ; shift 2 ;;
    -b | --branch)      BRANCH="$2"   ; shift 2 ;;
    -c | --check)       CPATCH="1"    ; shift   ;;
    --) shift ;;
    *) break ;;
  esac
done

if [[ -z "$NAME" ]]; then
  echo "Package name not specified"
  usage
  exit 12
fi

# Set some defaults
BRANCH="${BRANCH:-$DEFAULT_BRANCH}"
VERSION="${BRANCH//[!0-9]/}"
SUFFIX="${BRANCH#c${VERSION}}"

function main() {
  _determine_clone_method_c
  GIT_PREFIX="https://git.rockylinux.org/staging/src-rhel/rpms"
  GIT_PATCH_PREFIX="https://git.rockylinux.org/staging/patch"
  [[ "$CPATCH" == "1" ]] && _pull_srpmproc_patch
  ${clone_method}
}

main
